# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- '*'

pool:
  name: 'Default' # 'Default' is the name of the agent pool automatically chosen during the configuration of GitHub Codespace secrets.

variables:
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: '6.x'

steps:
- task: UseDotNet@2 # Specifica la versione da usare nell'agente di compilazione.
  displayName: 'Use .NET SDK $(dotnetSdkVersion)'
  inputs:
    packageType: sdk
    version: '$(dotnetSdkVersion)'

- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    verbose: false

- script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
  displayName: 'Compile Sass assets'

- task: gulp@1
  displayName: 'Run gulp tasks'

# Build.DefinitionName: Nome della pipeline di compilazione.
# Build.BuildId: Identificatore numerico per la compilazione completata.
# Build.BuildNumber: Nome della compilazione completata.
- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: $(wwwrootDir)

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- template: templates/build.yml # Richiama il modello build.yml passandogli la build 'Debug'.
  parameters:
    buildConfiguration: 'Debug'

- template: templates/build.yml # Richiama il modello build.yml passandogli la build 'Release'.
  parameters:
    buildConfiguration: 'Release'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()
